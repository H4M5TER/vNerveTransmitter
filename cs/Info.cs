// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vNerve/bilibili/info/info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VNerve.Bilibili {

  /// <summary>Holder for reflection information generated from vNerve/bilibili/info/info.proto</summary>
  public static partial class InfoReflection {

    #region Descriptor
    /// <summary>File descriptor for vNerve/bilibili/info/info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch92TmVydmUvYmlsaWJpbGkvaW5mby9pbmZvLnByb3RvEg92TmVydmUuYmls",
            "aWJpbGkiMQoaR2V0QWxsQmlsaWJpbGlJbmZvc1JlcXVlc3QSEwoLc3RhdGlj",
            "X29ubHkYASABKAgiPwobR2V0QmlsaWJpbGlJbmZvQnlVaWRSZXF1ZXN0EgsK",
            "A3VpZBgBIAEoDRITCgtzdGF0aWNfb25seRgCIAEoCCJLChJCaWxpYmlsaUNv",
            "bGxlY3Rpb24SNQoOYmlsaWJpbGlfaW5mb3MYASADKAsyHS52TmVydmUuYmls",
            "aWJpbGkuQmlsaWJpbGlJbmZvIskDCgxCaWxpYmlsaUluZm8SCwoDdWlkGAEg",
            "ASgNEgwKBHV1aWQYAiABKAkSDQoFdW5hbWUYAyABKAkSDwoHcm9vbV9pZBgE",
            "IAEoDRIQCghmb2xsb3dlchgFIAEoDRIgChhmb2xsb3dlcl9kYWlseV9pbmNy",
            "ZW1lbnQYBiABKAUSEgoKcm9vbV90aXRsZRgHIAEoCRIwCgtsaXZlX3N0YXR1",
            "cxgIIAEoDjIbLnZOZXJ2ZS5iaWxpYmlsaS5MaXZlU3RhdHVzEhIKCnBvcHVs",
            "YXJpdHkYCSABKA0SEQoJcmFua19hcmVhGAogASgNEhMKC2Rlc2NyaXB0aW9u",
            "GAsgASgJEhMKC3Jvb21fbm90aWNlGAwgASgJEhIKCmF2YXRhcl91cmwYDSAB",
            "KAkSGAoQYmFubmVyX2ltYWdlX3VybBgOIAEoCRITCgt2aWRlb19jb3VudBgP",
            "IAEoDRIZChF2aWRlb190b3RhbF92aWV3cxgQIAEoDRITCgtndWFyZF9jb3Vu",
            "dBgRIAEoDRIUCgxndWFyZF9sZXZlbDEYEiABKA0SFAoMZ3VhcmRfbGV2ZWwy",
            "GBMgASgNEhQKDGd1YXJkX2xldmVsMxgUIAEoDSo9CgpMaXZlU3RhdHVzEg0K",
            "CVBSRVBBUklORxAAEggKBExJVkUQARIJCgVST1VORBACEgsKB0NVVF9PRkYQ",
            "AzLYAQoIQmlsaWJpbGkSZwoTR2V0QWxsQmlsaWJpbGlJbmZvcxIrLnZOZXJ2",
            "ZS5iaWxpYmlsaS5HZXRBbGxCaWxpYmlsaUluZm9zUmVxdWVzdBojLnZOZXJ2",
            "ZS5iaWxpYmlsaS5CaWxpYmlsaUNvbGxlY3Rpb24SYwoUR2V0QmlsaWJpbGlJ",
            "bmZvQnlVaWQSLC52TmVydmUuYmlsaWJpbGkuR2V0QmlsaWJpbGlJbmZvQnlV",
            "aWRSZXF1ZXN0Gh0udk5lcnZlLmJpbGliaWxpLkJpbGliaWxpSW5mb2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::VNerve.Bilibili.LiveStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.GetAllBilibiliInfosRequest), global::VNerve.Bilibili.GetAllBilibiliInfosRequest.Parser, new[]{ "StaticOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.GetBilibiliInfoByUidRequest), global::VNerve.Bilibili.GetBilibiliInfoByUidRequest.Parser, new[]{ "Uid", "StaticOnly" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.BilibiliCollection), global::VNerve.Bilibili.BilibiliCollection.Parser, new[]{ "BilibiliInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VNerve.Bilibili.BilibiliInfo), global::VNerve.Bilibili.BilibiliInfo.Parser, new[]{ "Uid", "Uuid", "Uname", "RoomId", "Follower", "FollowerDailyIncrement", "RoomTitle", "LiveStatus", "Popularity", "RankArea", "Description", "RoomNotice", "AvatarUrl", "BannerImageUrl", "VideoCount", "VideoTotalViews", "GuardCount", "GuardLevel1", "GuardLevel2", "GuardLevel3" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LiveStatus {
    [pbr::OriginalName("PREPARING")] Preparing = 0,
    [pbr::OriginalName("LIVE")] Live = 1,
    [pbr::OriginalName("ROUND")] Round = 2,
    [pbr::OriginalName("CUT_OFF")] CutOff = 3,
  }

  #endregion

  #region Messages
  public sealed partial class GetAllBilibiliInfosRequest : pb::IMessage<GetAllBilibiliInfosRequest> {
    private static readonly pb::MessageParser<GetAllBilibiliInfosRequest> _parser = new pb::MessageParser<GetAllBilibiliInfosRequest>(() => new GetAllBilibiliInfosRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllBilibiliInfosRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.InfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllBilibiliInfosRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllBilibiliInfosRequest(GetAllBilibiliInfosRequest other) : this() {
      staticOnly_ = other.staticOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllBilibiliInfosRequest Clone() {
      return new GetAllBilibiliInfosRequest(this);
    }

    /// <summary>Field number for the "static_only" field.</summary>
    public const int StaticOnlyFieldNumber = 1;
    private bool staticOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StaticOnly {
      get { return staticOnly_; }
      set {
        staticOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllBilibiliInfosRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllBilibiliInfosRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StaticOnly != other.StaticOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StaticOnly != false) hash ^= StaticOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StaticOnly != false) {
        output.WriteRawTag(8);
        output.WriteBool(StaticOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StaticOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllBilibiliInfosRequest other) {
      if (other == null) {
        return;
      }
      if (other.StaticOnly != false) {
        StaticOnly = other.StaticOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StaticOnly = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBilibiliInfoByUidRequest : pb::IMessage<GetBilibiliInfoByUidRequest> {
    private static readonly pb::MessageParser<GetBilibiliInfoByUidRequest> _parser = new pb::MessageParser<GetBilibiliInfoByUidRequest>(() => new GetBilibiliInfoByUidRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBilibiliInfoByUidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.InfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBilibiliInfoByUidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBilibiliInfoByUidRequest(GetBilibiliInfoByUidRequest other) : this() {
      uid_ = other.uid_;
      staticOnly_ = other.staticOnly_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBilibiliInfoByUidRequest Clone() {
      return new GetBilibiliInfoByUidRequest(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private uint uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "static_only" field.</summary>
    public const int StaticOnlyFieldNumber = 2;
    private bool staticOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StaticOnly {
      get { return staticOnly_; }
      set {
        staticOnly_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBilibiliInfoByUidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBilibiliInfoByUidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (StaticOnly != other.StaticOnly) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (StaticOnly != false) hash ^= StaticOnly.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Uid);
      }
      if (StaticOnly != false) {
        output.WriteRawTag(16);
        output.WriteBool(StaticOnly);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (StaticOnly != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBilibiliInfoByUidRequest other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      if (other.StaticOnly != false) {
        StaticOnly = other.StaticOnly;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadUInt32();
            break;
          }
          case 16: {
            StaticOnly = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BilibiliCollection : pb::IMessage<BilibiliCollection> {
    private static readonly pb::MessageParser<BilibiliCollection> _parser = new pb::MessageParser<BilibiliCollection>(() => new BilibiliCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BilibiliCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.InfoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BilibiliCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BilibiliCollection(BilibiliCollection other) : this() {
      bilibiliInfos_ = other.bilibiliInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BilibiliCollection Clone() {
      return new BilibiliCollection(this);
    }

    /// <summary>Field number for the "bilibili_infos" field.</summary>
    public const int BilibiliInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::VNerve.Bilibili.BilibiliInfo> _repeated_bilibiliInfos_codec
        = pb::FieldCodec.ForMessage(10, global::VNerve.Bilibili.BilibiliInfo.Parser);
    private readonly pbc::RepeatedField<global::VNerve.Bilibili.BilibiliInfo> bilibiliInfos_ = new pbc::RepeatedField<global::VNerve.Bilibili.BilibiliInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VNerve.Bilibili.BilibiliInfo> BilibiliInfos {
      get { return bilibiliInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BilibiliCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BilibiliCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bilibiliInfos_.Equals(other.bilibiliInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bilibiliInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bilibiliInfos_.WriteTo(output, _repeated_bilibiliInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bilibiliInfos_.CalculateSize(_repeated_bilibiliInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BilibiliCollection other) {
      if (other == null) {
        return;
      }
      bilibiliInfos_.Add(other.bilibiliInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bilibiliInfos_.AddEntriesFrom(input, _repeated_bilibiliInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BilibiliInfo : pb::IMessage<BilibiliInfo> {
    private static readonly pb::MessageParser<BilibiliInfo> _parser = new pb::MessageParser<BilibiliInfo>(() => new BilibiliInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BilibiliInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VNerve.Bilibili.InfoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BilibiliInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BilibiliInfo(BilibiliInfo other) : this() {
      uid_ = other.uid_;
      uuid_ = other.uuid_;
      uname_ = other.uname_;
      roomId_ = other.roomId_;
      follower_ = other.follower_;
      followerDailyIncrement_ = other.followerDailyIncrement_;
      roomTitle_ = other.roomTitle_;
      liveStatus_ = other.liveStatus_;
      popularity_ = other.popularity_;
      rankArea_ = other.rankArea_;
      description_ = other.description_;
      roomNotice_ = other.roomNotice_;
      avatarUrl_ = other.avatarUrl_;
      bannerImageUrl_ = other.bannerImageUrl_;
      videoCount_ = other.videoCount_;
      videoTotalViews_ = other.videoTotalViews_;
      guardCount_ = other.guardCount_;
      guardLevel1_ = other.guardLevel1_;
      guardLevel2_ = other.guardLevel2_;
      guardLevel3_ = other.guardLevel3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BilibiliInfo Clone() {
      return new BilibiliInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private uint uid_;
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 2;
    private string uuid_ = "";
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uname" field.</summary>
    public const int UnameFieldNumber = 3;
    private string uname_ = "";
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uname {
      get { return uname_; }
      set {
        uname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 4;
    private uint roomId_;
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "follower" field.</summary>
    public const int FollowerFieldNumber = 5;
    private uint follower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Follower {
      get { return follower_; }
      set {
        follower_ = value;
      }
    }

    /// <summary>Field number for the "follower_daily_increment" field.</summary>
    public const int FollowerDailyIncrementFieldNumber = 6;
    private int followerDailyIncrement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FollowerDailyIncrement {
      get { return followerDailyIncrement_; }
      set {
        followerDailyIncrement_ = value;
      }
    }

    /// <summary>Field number for the "room_title" field.</summary>
    public const int RoomTitleFieldNumber = 7;
    private string roomTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomTitle {
      get { return roomTitle_; }
      set {
        roomTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "live_status" field.</summary>
    public const int LiveStatusFieldNumber = 8;
    private global::VNerve.Bilibili.LiveStatus liveStatus_ = global::VNerve.Bilibili.LiveStatus.Preparing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VNerve.Bilibili.LiveStatus LiveStatus {
      get { return liveStatus_; }
      set {
        liveStatus_ = value;
      }
    }

    /// <summary>Field number for the "popularity" field.</summary>
    public const int PopularityFieldNumber = 9;
    private uint popularity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Popularity {
      get { return popularity_; }
      set {
        popularity_ = value;
      }
    }

    /// <summary>Field number for the "rank_area" field.</summary>
    public const int RankAreaFieldNumber = 10;
    private uint rankArea_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RankArea {
      get { return rankArea_; }
      set {
        rankArea_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 11;
    private string description_ = "";
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_notice" field.</summary>
    public const int RoomNoticeFieldNumber = 12;
    private string roomNotice_ = "";
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNotice {
      get { return roomNotice_; }
      set {
        roomNotice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar_url" field.</summary>
    public const int AvatarUrlFieldNumber = 13;
    private string avatarUrl_ = "";
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvatarUrl {
      get { return avatarUrl_; }
      set {
        avatarUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "banner_image_url" field.</summary>
    public const int BannerImageUrlFieldNumber = 14;
    private string bannerImageUrl_ = "";
    /// <summary>
    ///static
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BannerImageUrl {
      get { return bannerImageUrl_; }
      set {
        bannerImageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "video_count" field.</summary>
    public const int VideoCountFieldNumber = 15;
    private uint videoCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint VideoCount {
      get { return videoCount_; }
      set {
        videoCount_ = value;
      }
    }

    /// <summary>Field number for the "video_total_views" field.</summary>
    public const int VideoTotalViewsFieldNumber = 16;
    private uint videoTotalViews_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint VideoTotalViews {
      get { return videoTotalViews_; }
      set {
        videoTotalViews_ = value;
      }
    }

    /// <summary>Field number for the "guard_count" field.</summary>
    public const int GuardCountFieldNumber = 17;
    private uint guardCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GuardCount {
      get { return guardCount_; }
      set {
        guardCount_ = value;
      }
    }

    /// <summary>Field number for the "guard_level1" field.</summary>
    public const int GuardLevel1FieldNumber = 18;
    private uint guardLevel1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GuardLevel1 {
      get { return guardLevel1_; }
      set {
        guardLevel1_ = value;
      }
    }

    /// <summary>Field number for the "guard_level2" field.</summary>
    public const int GuardLevel2FieldNumber = 19;
    private uint guardLevel2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GuardLevel2 {
      get { return guardLevel2_; }
      set {
        guardLevel2_ = value;
      }
    }

    /// <summary>Field number for the "guard_level3" field.</summary>
    public const int GuardLevel3FieldNumber = 20;
    private uint guardLevel3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GuardLevel3 {
      get { return guardLevel3_; }
      set {
        guardLevel3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BilibiliInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BilibiliInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Uuid != other.Uuid) return false;
      if (Uname != other.Uname) return false;
      if (RoomId != other.RoomId) return false;
      if (Follower != other.Follower) return false;
      if (FollowerDailyIncrement != other.FollowerDailyIncrement) return false;
      if (RoomTitle != other.RoomTitle) return false;
      if (LiveStatus != other.LiveStatus) return false;
      if (Popularity != other.Popularity) return false;
      if (RankArea != other.RankArea) return false;
      if (Description != other.Description) return false;
      if (RoomNotice != other.RoomNotice) return false;
      if (AvatarUrl != other.AvatarUrl) return false;
      if (BannerImageUrl != other.BannerImageUrl) return false;
      if (VideoCount != other.VideoCount) return false;
      if (VideoTotalViews != other.VideoTotalViews) return false;
      if (GuardCount != other.GuardCount) return false;
      if (GuardLevel1 != other.GuardLevel1) return false;
      if (GuardLevel2 != other.GuardLevel2) return false;
      if (GuardLevel3 != other.GuardLevel3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Uname.Length != 0) hash ^= Uname.GetHashCode();
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      if (Follower != 0) hash ^= Follower.GetHashCode();
      if (FollowerDailyIncrement != 0) hash ^= FollowerDailyIncrement.GetHashCode();
      if (RoomTitle.Length != 0) hash ^= RoomTitle.GetHashCode();
      if (LiveStatus != global::VNerve.Bilibili.LiveStatus.Preparing) hash ^= LiveStatus.GetHashCode();
      if (Popularity != 0) hash ^= Popularity.GetHashCode();
      if (RankArea != 0) hash ^= RankArea.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (RoomNotice.Length != 0) hash ^= RoomNotice.GetHashCode();
      if (AvatarUrl.Length != 0) hash ^= AvatarUrl.GetHashCode();
      if (BannerImageUrl.Length != 0) hash ^= BannerImageUrl.GetHashCode();
      if (VideoCount != 0) hash ^= VideoCount.GetHashCode();
      if (VideoTotalViews != 0) hash ^= VideoTotalViews.GetHashCode();
      if (GuardCount != 0) hash ^= GuardCount.GetHashCode();
      if (GuardLevel1 != 0) hash ^= GuardLevel1.GetHashCode();
      if (GuardLevel2 != 0) hash ^= GuardLevel2.GetHashCode();
      if (GuardLevel3 != 0) hash ^= GuardLevel3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Uid);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uuid);
      }
      if (Uname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uname);
      }
      if (RoomId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(RoomId);
      }
      if (Follower != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Follower);
      }
      if (FollowerDailyIncrement != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FollowerDailyIncrement);
      }
      if (RoomTitle.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RoomTitle);
      }
      if (LiveStatus != global::VNerve.Bilibili.LiveStatus.Preparing) {
        output.WriteRawTag(64);
        output.WriteEnum((int) LiveStatus);
      }
      if (Popularity != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Popularity);
      }
      if (RankArea != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(RankArea);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Description);
      }
      if (RoomNotice.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(RoomNotice);
      }
      if (AvatarUrl.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(AvatarUrl);
      }
      if (BannerImageUrl.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BannerImageUrl);
      }
      if (VideoCount != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(VideoCount);
      }
      if (VideoTotalViews != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(VideoTotalViews);
      }
      if (GuardCount != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(GuardCount);
      }
      if (GuardLevel1 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(GuardLevel1);
      }
      if (GuardLevel2 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(GuardLevel2);
      }
      if (GuardLevel3 != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(GuardLevel3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Uname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uname);
      }
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      if (Follower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Follower);
      }
      if (FollowerDailyIncrement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FollowerDailyIncrement);
      }
      if (RoomTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomTitle);
      }
      if (LiveStatus != global::VNerve.Bilibili.LiveStatus.Preparing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LiveStatus);
      }
      if (Popularity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Popularity);
      }
      if (RankArea != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RankArea);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (RoomNotice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNotice);
      }
      if (AvatarUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarUrl);
      }
      if (BannerImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BannerImageUrl);
      }
      if (VideoCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VideoCount);
      }
      if (VideoTotalViews != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(VideoTotalViews);
      }
      if (GuardCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GuardCount);
      }
      if (GuardLevel1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GuardLevel1);
      }
      if (GuardLevel2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GuardLevel2);
      }
      if (GuardLevel3 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GuardLevel3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BilibiliInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Uname.Length != 0) {
        Uname = other.Uname;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      if (other.Follower != 0) {
        Follower = other.Follower;
      }
      if (other.FollowerDailyIncrement != 0) {
        FollowerDailyIncrement = other.FollowerDailyIncrement;
      }
      if (other.RoomTitle.Length != 0) {
        RoomTitle = other.RoomTitle;
      }
      if (other.LiveStatus != global::VNerve.Bilibili.LiveStatus.Preparing) {
        LiveStatus = other.LiveStatus;
      }
      if (other.Popularity != 0) {
        Popularity = other.Popularity;
      }
      if (other.RankArea != 0) {
        RankArea = other.RankArea;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.RoomNotice.Length != 0) {
        RoomNotice = other.RoomNotice;
      }
      if (other.AvatarUrl.Length != 0) {
        AvatarUrl = other.AvatarUrl;
      }
      if (other.BannerImageUrl.Length != 0) {
        BannerImageUrl = other.BannerImageUrl;
      }
      if (other.VideoCount != 0) {
        VideoCount = other.VideoCount;
      }
      if (other.VideoTotalViews != 0) {
        VideoTotalViews = other.VideoTotalViews;
      }
      if (other.GuardCount != 0) {
        GuardCount = other.GuardCount;
      }
      if (other.GuardLevel1 != 0) {
        GuardLevel1 = other.GuardLevel1;
      }
      if (other.GuardLevel2 != 0) {
        GuardLevel2 = other.GuardLevel2;
      }
      if (other.GuardLevel3 != 0) {
        GuardLevel3 = other.GuardLevel3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadUInt32();
            break;
          }
          case 18: {
            Uuid = input.ReadString();
            break;
          }
          case 26: {
            Uname = input.ReadString();
            break;
          }
          case 32: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 40: {
            Follower = input.ReadUInt32();
            break;
          }
          case 48: {
            FollowerDailyIncrement = input.ReadInt32();
            break;
          }
          case 58: {
            RoomTitle = input.ReadString();
            break;
          }
          case 64: {
            LiveStatus = (global::VNerve.Bilibili.LiveStatus) input.ReadEnum();
            break;
          }
          case 72: {
            Popularity = input.ReadUInt32();
            break;
          }
          case 80: {
            RankArea = input.ReadUInt32();
            break;
          }
          case 90: {
            Description = input.ReadString();
            break;
          }
          case 98: {
            RoomNotice = input.ReadString();
            break;
          }
          case 106: {
            AvatarUrl = input.ReadString();
            break;
          }
          case 114: {
            BannerImageUrl = input.ReadString();
            break;
          }
          case 120: {
            VideoCount = input.ReadUInt32();
            break;
          }
          case 128: {
            VideoTotalViews = input.ReadUInt32();
            break;
          }
          case 136: {
            GuardCount = input.ReadUInt32();
            break;
          }
          case 144: {
            GuardLevel1 = input.ReadUInt32();
            break;
          }
          case 152: {
            GuardLevel2 = input.ReadUInt32();
            break;
          }
          case 160: {
            GuardLevel3 = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
